<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABFtJREFUeF7t
        3DGOFFcQxvEVwhKWI+QDWCLxWg4g8REIuYMlOICPAJmDXfsCSFzAqe0TOCNbHDiAHJGBRWKk9fd6/iub
        1Xwz3TVd4mle/aQntMzX9aqrd2d6pN05KaWUUkoppZRSSimllFJKue7y8vIbrZ+0Xmj9rTW6NoMLrXOt
        U8a0PhX/TOtnrX+0ynZtNu1C3GRs61DBNvzftco8v2mtdxFUrH3nl2XOGd9hVKg959fTznJtZl8zxjgV
        qe/+uDPGGKci7W6nxFwwxjgVebepVQLeMsY4ClnEhsUYLGJx1LGIDYsxWMTiqGMRGxZjsIjFUcciNizG
        YBGLo45FbFiMwSIWRx2L2LAYg0UsjjoWsWExBotYHHUsYsNiDBaxOOpYxIbFGCxicdSxiA2LMVjE4qhj
        ERsWY7CIxVHHIjYsxmARi6OORWxYjMEiFkcdi9iwGINFLI46FrFhMQaLWBx1LGLDYgwWsTjqWMSGxRgs
        YnHUsYgNizFYxOKoYxEbFmOwiMVRxyI2LMZgEYujjkWsa2rzB63v+XJV0xB2IBZHHYtYt9TiA60PWu2X
        aL/lv1ejmjsRi6OORaxLau87rf//BvefWl/w8Co2ZT1icdSxiHVHrd3Rej01+bFnRFZBTYtYHHUsYl1R
        W19q/TU1uF3K60EKGraIdUMtfa71x9Scl/J6kGLTr0fsICrzSOtHvgxTjRtav2jNsfrrQYpNrx6xMJW4
        q/V+KnbgRdDxS3+Te9XXgxQ0ahEL0eG3tV5Ohf4Tugg6rt3rL8bh/aJPi9hiOrQ9XbQ/5dlm0UVQ/upe
        fzFK9Is+LWKL6dAnmwrWrIug3PV7/UUo0y/6tIgtosPua835jt15EfS4u9efjVL9ok+L2Gw65CutN9PB
        82y9CPr/fff6s1DOImYRy8M+FrFZFL+l9Xw6cJmPLoK+nnOvPwslLWIWsTzsYxGbRfGnm6NCpougf5fc
        6+81NbYDMYtYHvaxiO2l6MPNEQd5rLXqX23SnkXMIpaHfSxiOyl2T+vqzVZXaNEiZhHLwz4WMUuR9mbr
        1RTuEG1axCxiedjHIraVHt71ZqsLtGoRs4jlYR+L2FZ6eN+brU+OVi1iFrE87GMRO1qcpkUsD/tYxI4W
        p2kRy8M+FrGjxWlaxPKwj0XsaHGaFrE87GMRO1qcpkUsD/tYxI4Wp2kRy8M+FrGjxWlaxPKwj0XsaHGa
        FrE82uPtZqs+0aZFrFu06SnT9UeW0aZFrFu06SnTPoi0W7RpEesWbXrKnGp1+7GVtGkR6xZt7qZctz8F
        tGgR6xZt7qbcTa1fpyM6Q4sWsW7R5n7KtovQfhK6ejqiPYtYt2hzPh3TXhPOtNpHtn/yzxSlLYtYt2iz
        OMzJIlayMGeLWMnCnC1iJQtztoiVLMzZIlayMGeLWMnCnC1iJQtztoiVLMzZIlayMGeLWMnCnC1iJQtz
        toiVLMzZIlayMGeLWMnCnC1iJQtztogFnZz8C5iLj1NnqnGvAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>